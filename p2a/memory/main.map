
Allocating common symbols
Common symbol       size              file

g_asmBridge         0x4               system.o
g_test_proc_table   0x54              system.o
g_priority_ready_tracker
                    0x8               system.o
g_priority_ready    0x150             system.o
gp_mem_pool_list    0x80              memory.o
old_stack           0x4               /tmp/ccgpTTmh.o
g_asmBridge16       0x2               system.o
gp_mem_pool_lookup  0x80              memory.o
main_stack          0x1000            /tmp/ccgpTTmh.o
g_null_proc         0xe               system.o
g_current_process   0x4               system.o

Memory Configuration

Name             Origin             Length             Attributes
ram              0x10100000         0x00100000
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /tmp/ccgpTTmh.o
LOAD /tmp/ccALw69o.o
LOAD dbug.o
LOAD Hex_to_ASCII.o
LOAD null_process.o
LOAD dummy_processes.o
LOAD system.o
LOAD memory.o
LOAD main.o
START GROUP
LOAD /opt/gcc-coldfire/bin/../lib/gcc/m68k-elf/4.3.2/m5307/libgcc.a
END GROUP
                0x00000000                __DYNAMIC = 0x0
                0x00000000                PROVIDE (hardware_init_hook, 0x0)
                0x00000000                PROVIDE (_hardware_init_hook, 0x0)
                0x00000000                PROVIDE (software_init_hook, 0x0)
                0x00000000                PROVIDE (_software_init_hook, 0x0)

.text           0x10100000      0xcfd
 *(.text)
 .text          0x10100000       0x1e /tmp/ccgpTTmh.o
 *fill*         0x1010001e        0x2 00
 .text          0x10100020       0x44 /tmp/ccALw69o.o
                0x10100020                asm_trap_entry
 .text          0x10100064       0x9a dbug.o
                0x10100084                rtx_dbug_outs
                0x10100064                rtx_dbug_out_char
 *fill*         0x101000fe        0x2 00
 .text          0x10100100      0x126 Hex_to_ASCII.o
                0x10100100                printHexAddress
 *fill*         0x10100226        0x2 00
 .text          0x10100228       0x1a null_process.o
                0x10100228                null_process
 *fill*         0x10100242        0x2 00
 .text          0x10100244       0x9c dummy_processes.o
                0x101002ac                test_proc_5
                0x10100292                test_proc_4
                0x10100278                test_proc_3
                0x10100244                test_proc_1
                0x1010025e                test_proc_2
                0x101002c6                test_proc_6
 .text          0x101002e0      0x832 system.o
                0x101002e0                sys_init
                0x101006ea                get_process_priority
                0x1010065a                set_process_priority
                0x1010063e                send_message
                0x10100526                scheduler
                0x1010076c                pop
                0x10100650                receive_message
                0x10100626                release_processor
                0x1010083e                push
 *fill*         0x10100b12        0x2 00
 .text          0x10100b14      0x14a memory.o
                0x10100be4                s_release_memory_block
                0x10100b14                init_memory
                0x10100b74                s_request_memory_block
 *fill*         0x10100c5e        0x2 00
 .text          0x10100c60       0x1a main.o
                0x10100c60                __main
                0x10100c6a                main
                0x10100c7c                . = ALIGN (0x4)
 *fill*         0x10100c7a        0x2 00
                0x10100c7c                __CTOR_LIST__ = .
                0x10100c7c        0x4 LONG 0x0 (((__CTOR_END__ - __CTOR_LIST__) / 0x4) - 0x2)
 *(.ctors)
                0x10100c80        0x4 LONG 0x0
                0x10100c84                __CTOR_END__ = .
                0x10100c84                __DTOR_LIST__ = .
                0x10100c84        0x4 LONG 0x0 (((__DTOR_END__ - __DTOR_LIST__) / 0x4) - 0x2)
 *(.dtors)
                0x10100c88        0x4 LONG 0x0
                0x10100c8c                __DTOR_END__ = .
 *(.rodata*)
 .rodata        0x10100c8c        0x3 Hex_to_ASCII.o
 .rodata        0x10100c8f       0x16 null_process.o
 .rodata        0x10100ca5       0x18 dummy_processes.o
 .rodata        0x10100cbd       0x30 system.o
 *(.gcc_except_table)
                0x10100ced                __INIT_SECTION__ = .
                0x10100ced        0x4 LONG 0x4e560000
 *(.init)
                0x10100cf1        0x2 SHORT 0x4e5e
                0x10100cf3        0x2 SHORT 0x4e75
                0x10100cf5                __FINI_SECTION__ = .
                0x10100cf5        0x4 LONG 0x4e560000
 *(.fini)
                0x10100cf9        0x2 SHORT 0x4e5e
                0x10100cfb        0x2 SHORT 0x4e75
                0x10100cfd                _etext = .
 *(.lit)

.data           0x10100d00        0x0
 *(.shdata)
 *(.data)
 .data          0x10100d00        0x0 /tmp/ccgpTTmh.o
 .data          0x10100d00        0x0 /tmp/ccALw69o.o
 .data          0x10100d00        0x0 dbug.o
 .data          0x10100d00        0x0 Hex_to_ASCII.o
 .data          0x10100d00        0x0 null_process.o
 .data          0x10100d00        0x0 dummy_processes.o
 .data          0x10100d00        0x0 system.o
 .data          0x10100d00        0x0 memory.o
 .data          0x10100d00        0x0 main.o
                0x10100d00                _edata = .

.bss            0x10100d00     0x12d4
                0x10100d00                __bss_start = .
 *(.shbss)
 *(.bss)
 .bss           0x10100d00        0x0 /tmp/ccgpTTmh.o
 .bss           0x10100d00        0x0 /tmp/ccALw69o.o
 .bss           0x10100d00        0x0 dbug.o
 .bss           0x10100d00        0x0 Hex_to_ASCII.o
 .bss           0x10100d00        0x0 null_process.o
 .bss           0x10100d00        0x0 dummy_processes.o
 .bss           0x10100d00        0x0 system.o
 .bss           0x10100d00        0x0 memory.o
 .bss           0x10100d00        0x0 main.o
 *(COMMON)
 COMMON         0x10100d00     0x1010 /tmp/ccgpTTmh.o
                0x10100d00                old_stack
                0x10100d10                main_stack
 COMMON         0x10101d10      0x1c4 system.o
                0x10101d10                g_asmBridge
                0x10101d14                g_test_proc_table
                0x10101d68                g_priority_ready_tracker
                0x10101d70                g_priority_ready
                0x10101ec0                g_asmBridge16
                0x10101ec2                g_null_proc
                0x10101ed0                g_current_process
 COMMON         0x10101ed4      0x100 memory.o
                0x10101ed4                gp_mem_pool_list
                0x10101f54                gp_mem_pool_lookup
                0x10101fd8                _end = ALIGN (0x8)
                0x10101fd8                __end = _end

.stab
 *(.stab)

.stabstr
 *(.stabstr)

__REGISTER_RTX__
                0x10300000        0x0
                0x10300000                __REGISTER_RTX_ENTRY__ = <code 345> (.)
 *(__REGISTER_RTX__)
                0x10380000                __REGISTER_TEST_PROCS_ENTRY__ = 0x10380000
                0x10400000                __RTX_TEST_CODE_ENTRY__ = 0x10400000

__RTX_TEST_DATA__
 *(__RTX_TEST_DATA__)
OUTPUT(main.bin elf32-m68k)

.comment        0x00000000      0x111
 .comment       0x00000000       0x27 dbug.o
 .comment       0x00000027       0x27 Hex_to_ASCII.o
 .comment       0x0000004e       0x27 null_process.o
 .comment       0x00000075       0x27 dummy_processes.o
 .comment       0x0000009c       0x27 system.o
 .comment       0x000000c3       0x27 memory.o
 .comment       0x000000ea       0x27 main.o
