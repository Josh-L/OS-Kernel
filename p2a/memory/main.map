
Allocating common symbols
Common symbol       size              file

g_asmBridge         0x4               system.o
g_test_proc_table   0x1d4             system.o
g_priority_ready_tracker
                    0x8               system.o
g_priority_ready    0x750             system.o
gp_mem_pool_list    0x80              memory.o
old_stack           0x4               /tmp/ccdbERw3.o
gp_mem_pool_lookup  0x80              memory.o
main_stack          0x1000            /tmp/ccdbERw3.o
g_null_proc         0x4e              system.o
g_current_process   0x4               system.o

Memory Configuration

Name             Origin             Length             Attributes
ram              0x10100000         0x00100000
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /tmp/ccdbERw3.o
LOAD dbug.o
LOAD Hex_to_ASCII.o
LOAD null_process.o
LOAD dummy_processes.o
LOAD system.o
LOAD memory.o
LOAD main.o
START GROUP
LOAD /opt/gcc-coldfire/bin/../lib/gcc/m68k-elf/4.3.2/m5307/libgcc.a
END GROUP
                0x00000000                __DYNAMIC = 0x0
                0x00000000                PROVIDE (hardware_init_hook, 0x0)
                0x00000000                PROVIDE (_hardware_init_hook, 0x0)
                0x00000000                PROVIDE (software_init_hook, 0x0)
                0x00000000                PROVIDE (_software_init_hook, 0x0)

.text           0x10100000      0xfcb
 *(.text)
 .text          0x10100000       0x1e /tmp/ccdbERw3.o
 *fill*         0x1010001e        0x2 00
 .text          0x10100020       0x9a dbug.o
                0x10100040                rtx_dbug_outs
                0x10100020                rtx_dbug_out_char
 *fill*         0x101000ba        0x2 00
 .text          0x101000bc      0x126 Hex_to_ASCII.o
                0x101000bc                printHexAddress
 *fill*         0x101001e2        0x2 00
 .text          0x101001e4       0x1a null_process.o
                0x101001e4                null_process
 *fill*         0x101001fe        0x2 00
 .text          0x10100200       0x9c dummy_processes.o
                0x10100268                test_proc_5
                0x1010024e                test_proc_4
                0x10100234                test_proc_3
                0x10100200                test_proc_1
                0x1010021a                test_proc_2
                0x10100282                test_proc_6
 .text          0x1010029c      0xb00 system.o
                0x1010029c                sys_init
                0x10100940                get_process_priority
                0x101008b8                set_process_priority
                0x1010089c                send_message
                0x101004e6                scheduler
                0x101009ba                pop
                0x101008ae                receive_message
                0x101006be                release_processor
                0x10100a82                push
 .text          0x10100d9c      0x14a memory.o
                0x10100e6c                s_release_memory_block
                0x10100d9c                init_memory
                0x10100dfc                s_request_memory_block
 *fill*         0x10100ee6        0x2 00
 .text          0x10100ee8       0x1a main.o
                0x10100ee8                __main
                0x10100ef2                main
                0x10100f04                . = ALIGN (0x4)
 *fill*         0x10100f02        0x2 00
                0x10100f04                __CTOR_LIST__ = .
                0x10100f04        0x4 LONG 0x0 (((__CTOR_END__ - __CTOR_LIST__) / 0x4) - 0x2)
 *(.ctors)
                0x10100f08        0x4 LONG 0x0
                0x10100f0c                __CTOR_END__ = .
                0x10100f0c                __DTOR_LIST__ = .
                0x10100f0c        0x4 LONG 0x0 (((__DTOR_END__ - __DTOR_LIST__) / 0x4) - 0x2)
 *(.dtors)
                0x10100f10        0x4 LONG 0x0
                0x10100f14                __DTOR_END__ = .
 *(.rodata*)
 .rodata        0x10100f14        0x3 Hex_to_ASCII.o
 .rodata        0x10100f17       0x16 null_process.o
 .rodata        0x10100f2d       0x18 dummy_processes.o
 .rodata        0x10100f45       0x76 system.o
 *(.gcc_except_table)
                0x10100fbb                __INIT_SECTION__ = .
                0x10100fbb        0x4 LONG 0x4e560000
 *(.init)
                0x10100fbf        0x2 SHORT 0x4e5e
                0x10100fc1        0x2 SHORT 0x4e75
                0x10100fc3                __FINI_SECTION__ = .
                0x10100fc3        0x4 LONG 0x4e560000
 *(.fini)
                0x10100fc7        0x2 SHORT 0x4e5e
                0x10100fc9        0x2 SHORT 0x4e75
                0x10100fcb                _etext = .
 *(.lit)

.data           0x10100fcc        0x0
 *(.shdata)
 *(.data)
 .data          0x10100fcc        0x0 /tmp/ccdbERw3.o
 .data          0x10100fcc        0x0 dbug.o
 .data          0x10100fcc        0x0 Hex_to_ASCII.o
 .data          0x10100fcc        0x0 null_process.o
 .data          0x10100fcc        0x0 dummy_processes.o
 .data          0x10100fcc        0x0 system.o
 .data          0x10100fcc        0x0 memory.o
 .data          0x10100fcc        0x0 main.o
                0x10100fcc                _edata = .

.bss            0x10100fcc     0x1a96
                0x10100fcc                __bss_start = .
 *(.shbss)
 *(.bss)
 .bss           0x10100fcc        0x0 /tmp/ccdbERw3.o
 .bss           0x10100fcc        0x0 dbug.o
 .bss           0x10100fcc        0x0 Hex_to_ASCII.o
 .bss           0x10100fcc        0x0 null_process.o
 .bss           0x10100fcc        0x0 dummy_processes.o
 .bss           0x10100fcc        0x0 system.o
 .bss           0x10100fcc        0x0 memory.o
 .bss           0x10100fcc        0x0 main.o
 *(COMMON)
 *fill*         0x10100fcc        0x4 00
 COMMON         0x10100fd0     0x1010 /tmp/ccdbERw3.o
                0x10100fd0                old_stack
                0x10100fe0                main_stack
 COMMON         0x10101fe0      0x982 system.o
                0x10101fe0                g_asmBridge
                0x10101fe4                g_test_proc_table
                0x101021b8                g_priority_ready_tracker
                0x101021c0                g_priority_ready
                0x10102910                g_null_proc
                0x1010295e                g_current_process
 COMMON         0x10102962      0x100 memory.o
                0x10102962                gp_mem_pool_list
                0x101029e2                gp_mem_pool_lookup
                0x10102a68                _end = ALIGN (0x8)
                0x10102a68                __end = _end

.stab
 *(.stab)

.stabstr
 *(.stabstr)

__REGISTER_RTX__
                0x10300000        0x0
                0x10300000                __REGISTER_RTX_ENTRY__ = <code 345> (.)
 *(__REGISTER_RTX__)
                0x10380000                __REGISTER_TEST_PROCS_ENTRY__ = 0x10380000
                0x10400000                __RTX_TEST_CODE_ENTRY__ = 0x10400000

__RTX_TEST_DATA__
 *(__RTX_TEST_DATA__)
OUTPUT(main.bin elf32-m68k)

.comment        0x00000000      0x111
 .comment       0x00000000       0x27 dbug.o
 .comment       0x00000027       0x27 Hex_to_ASCII.o
 .comment       0x0000004e       0x27 null_process.o
 .comment       0x00000075       0x27 dummy_processes.o
 .comment       0x0000009c       0x27 system.o
 .comment       0x000000c3       0x27 memory.o
 .comment       0x000000ea       0x27 main.o
