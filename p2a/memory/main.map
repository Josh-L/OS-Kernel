
Allocating common symbols
Common symbol       size              file

g_test_proc_table   0x54              system.o
g_priority_ready_tracker
                    0x8               system.o
g_priority_ready    0x150             system.o
gp_mem_pool_list    0x80              memory.o
old_stack           0x4               /tmp/ccn0eNAq.o
gp_mem_pool_lookup  0x80              memory.o
main_stack          0x1000            /tmp/ccn0eNAq.o
g_null_proc         0xe               system.o
g_current_process   0x4               system.o

Memory Configuration

Name             Origin             Length             Attributes
ram              0x10100000         0x00100000
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /tmp/ccn0eNAq.o
LOAD /tmp/ccKZPVlH.o
LOAD dbug.o
LOAD Hex_to_ASCII.o
LOAD null_process.o
LOAD dummy_processes.o
LOAD system.o
LOAD memory.o
LOAD main.o
START GROUP
LOAD /opt/gcc-coldfire/bin/../lib/gcc/m68k-elf/4.3.2/m5307/libgcc.a
END GROUP
                0x00000000                __DYNAMIC = 0x0
                0x00000000                PROVIDE (hardware_init_hook, 0x0)
                0x00000000                PROVIDE (_hardware_init_hook, 0x0)
                0x00000000                PROVIDE (software_init_hook, 0x0)
                0x00000000                PROVIDE (_software_init_hook, 0x0)

.text           0x10100000      0xe37
 *(.text)
 .text          0x10100000       0x1e /tmp/ccn0eNAq.o
 *fill*         0x1010001e        0x2 00
 .text          0x10100020       0x44 /tmp/ccKZPVlH.o
                0x10100020                asm_trap_entry
 .text          0x10100064       0x9a dbug.o
                0x10100084                rtx_dbug_outs
                0x10100064                rtx_dbug_out_char
 *fill*         0x101000fe        0x2 00
 .text          0x10100100      0x126 Hex_to_ASCII.o
                0x10100100                printHexAddress
 *fill*         0x10100226        0x2 00
 .text          0x10100228       0x1a null_process.o
                0x10100228                null_process
 *fill*         0x10100242        0x2 00
 .text          0x10100244       0x9c dummy_processes.o
                0x101002ac                test_proc_5
                0x10100292                test_proc_4
                0x10100278                test_proc_3
                0x10100244                test_proc_1
                0x1010025e                test_proc_2
                0x101002c6                test_proc_6
 .text          0x101002e0      0x95a system.o
                0x101002e0                sys_init
                0x10100812                get_process_priority
                0x10100782                set_process_priority
                0x10100766                send_message
                0x10100672                scheduler
                0x10100894                pop
                0x10100778                receive_message
                0x1010075a                release_processor
                0x10100966                push
 *fill*         0x10100c3a        0x2 00
 .text          0x10100c3c      0x14a memory.o
                0x10100d0c                s_release_memory_block
                0x10100c3c                init_memory
                0x10100c9c                s_request_memory_block
 *fill*         0x10100d86        0x2 00
 .text          0x10100d88       0x1a main.o
                0x10100d88                __main
                0x10100d92                main
                0x10100da4                . = ALIGN (0x4)
 *fill*         0x10100da2        0x2 00
                0x10100da4                __CTOR_LIST__ = .
                0x10100da4        0x4 LONG 0x0 (((__CTOR_END__ - __CTOR_LIST__) / 0x4) - 0x2)
 *(.ctors)
                0x10100da8        0x4 LONG 0x0
                0x10100dac                __CTOR_END__ = .
                0x10100dac                __DTOR_LIST__ = .
                0x10100dac        0x4 LONG 0x0 (((__DTOR_END__ - __DTOR_LIST__) / 0x4) - 0x2)
 *(.dtors)
                0x10100db0        0x4 LONG 0x0
                0x10100db4                __DTOR_END__ = .
 *(.rodata*)
 .rodata        0x10100db4        0x3 Hex_to_ASCII.o
 .rodata        0x10100db7        0xe null_process.o
 .rodata        0x10100dc5       0x18 dummy_processes.o
 .rodata        0x10100ddd       0x4a system.o
 *(.gcc_except_table)
                0x10100e27                __INIT_SECTION__ = .
                0x10100e27        0x4 LONG 0x4e560000
 *(.init)
                0x10100e2b        0x2 SHORT 0x4e5e
                0x10100e2d        0x2 SHORT 0x4e75
                0x10100e2f                __FINI_SECTION__ = .
                0x10100e2f        0x4 LONG 0x4e560000
 *(.fini)
                0x10100e33        0x2 SHORT 0x4e5e
                0x10100e35        0x2 SHORT 0x4e75
                0x10100e37                _etext = .
 *(.lit)

.data           0x10100e38        0x0
 *(.shdata)
 *(.data)
 .data          0x10100e38        0x0 /tmp/ccn0eNAq.o
 .data          0x10100e38        0x0 /tmp/ccKZPVlH.o
 .data          0x10100e38        0x0 dbug.o
 .data          0x10100e38        0x0 Hex_to_ASCII.o
 .data          0x10100e38        0x0 null_process.o
 .data          0x10100e38        0x0 dummy_processes.o
 .data          0x10100e38        0x0 system.o
 .data          0x10100e38        0x0 memory.o
 .data          0x10100e38        0x0 main.o
                0x10100e38                _edata = .

.bss            0x10100e38     0x12d6
                0x10100e38                __bss_start = .
 *(.shbss)
 *(.bss)
 .bss           0x10100e38        0x0 /tmp/ccn0eNAq.o
 .bss           0x10100e38        0x0 /tmp/ccKZPVlH.o
 .bss           0x10100e38        0x0 dbug.o
 .bss           0x10100e38        0x0 Hex_to_ASCII.o
 .bss           0x10100e38        0x0 null_process.o
 .bss           0x10100e38        0x0 dummy_processes.o
 .bss           0x10100e38        0x4 system.o
                0x10100e38                g_asmBridge
 .bss           0x10100e3c        0x0 memory.o
 .bss           0x10100e3c        0x0 main.o
 *(COMMON)
 *fill*         0x10100e3c        0x4 00
 COMMON         0x10100e40     0x1010 /tmp/ccn0eNAq.o
                0x10100e40                old_stack
                0x10100e50                main_stack
 COMMON         0x10101e50      0x1be system.o
                0x10101e50                g_test_proc_table
                0x10101ea4                g_priority_ready_tracker
                0x10101eac                g_priority_ready
                0x10101ffc                g_null_proc
                0x1010200a                g_current_process
 COMMON         0x1010200e      0x100 memory.o
                0x1010200e                gp_mem_pool_list
                0x1010208e                gp_mem_pool_lookup
                0x10102110                _end = ALIGN (0x8)
                0x10102110                __end = _end

.stab
 *(.stab)

.stabstr
 *(.stabstr)

__REGISTER_RTX__
                0x10300000        0x0
                0x10300000                __REGISTER_RTX_ENTRY__ = <code 345> (.)
 *(__REGISTER_RTX__)
                0x10380000                __REGISTER_TEST_PROCS_ENTRY__ = 0x10380000
                0x10400000                __RTX_TEST_CODE_ENTRY__ = 0x10400000

__RTX_TEST_DATA__
 *(__RTX_TEST_DATA__)
OUTPUT(main.bin elf32-m68k)

.comment        0x00000000      0x111
 .comment       0x00000000       0x27 dbug.o
 .comment       0x00000027       0x27 Hex_to_ASCII.o
 .comment       0x0000004e       0x27 null_process.o
 .comment       0x00000075       0x27 dummy_processes.o
 .comment       0x0000009c       0x27 system.o
 .comment       0x000000c3       0x27 memory.o
 .comment       0x000000ea       0x27 main.o
