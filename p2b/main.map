
Allocating common symbols
Common symbol       size              file

g_queue_slots       0x30              system.o
g_proc_table        0x54              system.o
gp_mem_pool_list    0x80              system.o
old_stack           0x4               /tmp/ccNxkieI.o
g_priority_queues   0x32              system.o
gp_mem_pool_lookup  0x80              system.o
main_stack          0x1000            /tmp/ccNxkieI.o
g_current_process   0x4               system.o

Memory Configuration

Name             Origin             Length             Attributes
ram              0x10100000         0x00100000
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /tmp/ccNxkieI.o
LOAD /tmp/ccY6LCTg.o
LOAD /tmp/ccv3x4ON.o
LOAD dbug.o
LOAD Hex_to_ASCII.o
LOAD null_process.o
LOAD dummy_processes.o
LOAD system.o
LOAD main.o
START GROUP
LOAD /opt/gcc-coldfire/bin/../lib/gcc/m68k-elf/4.3.2/m5307/libgcc.a
END GROUP
                0x00000000                __DYNAMIC = 0x0
                0x00000000                PROVIDE (hardware_init_hook, 0x0)
                0x00000000                PROVIDE (_hardware_init_hook, 0x0)
                0x00000000                PROVIDE (software_init_hook, 0x0)
                0x00000000                PROVIDE (_software_init_hook, 0x0)

.text           0x10100000      0xed8
 *(.text)
 .text          0x10100000       0x1e /tmp/ccNxkieI.o
 *fill*         0x1010001e        0x2 00
 .text          0x10100020       0x54 /tmp/ccY6LCTg.o
                0x10100020                asm_trap_entry
 .text          0x10100074        0x8 /tmp/ccv3x4ON.o
                0x10100074                trap_1_handler
 .text          0x1010007c       0x9a dbug.o
                0x1010009c                rtx_dbug_outs
                0x1010007c                rtx_dbug_out_char
 *fill*         0x10100116        0x2 00
 .text          0x10100118      0x126 Hex_to_ASCII.o
                0x10100118                printHexAddress
 *fill*         0x1010023e        0x2 00
 .text          0x10100240       0x1a null_process.o
                0x10100240                null_process
 *fill*         0x1010025a        0x2 00
 .text          0x1010025c       0x90 dummy_processes.o
                0x101002bc                test_proc_5
                0x101002a4                test_proc_4
                0x1010028c                test_proc_3
                0x1010025c                test_proc_1
                0x10100274                test_proc_2
                0x101002d4                test_proc_6
 .text          0x101002ec      0xb52 system.o
                0x101002ec                sys_init
                0x10100cd0                get_process_priority
                0x10100d52                request_memory_block
                0x10100954                set_process_priority
                0x10100dc2                s_release_memory_block
                0x101007f8                send_message
                0x101006b6                scheduler
                0x10100814                pop
                0x101009ec                set_process_priority_trap_handler
                0x1010080a                receive_message
                0x101007b0                release_processor
                0x10100882                push
 *fill*         0x10100e3e        0x2 00
 .text          0x10100e40       0x1a main.o
                0x10100e40                __main
                0x10100e4a                main
                0x10100e5c                . = ALIGN (0x4)
 *fill*         0x10100e5a        0x2 00
                0x10100e5c                __CTOR_LIST__ = .
                0x10100e5c        0x4 LONG 0x0 (((__CTOR_END__ - __CTOR_LIST__) / 0x4) - 0x2)
 *(.ctors)
                0x10100e60        0x4 LONG 0x0
                0x10100e64                __CTOR_END__ = .
                0x10100e64                __DTOR_LIST__ = .
                0x10100e64        0x4 LONG 0x0 (((__DTOR_END__ - __DTOR_LIST__) / 0x4) - 0x2)
 *(.dtors)
                0x10100e68        0x4 LONG 0x0
                0x10100e6c                __DTOR_END__ = .
 *(.rodata*)
 .rodata        0x10100e6c        0x3 Hex_to_ASCII.o
 .rodata        0x10100e6f        0x4 null_process.o
 *fill*         0x10100e73        0x1 00
 .rodata        0x10100e74       0x54 system.o
                0x10100e74                process_init_table
 *(.gcc_except_table)
                0x10100ec8                __INIT_SECTION__ = .
                0x10100ec8        0x4 LONG 0x4e560000
 *(.init)
                0x10100ecc        0x2 SHORT 0x4e5e
                0x10100ece        0x2 SHORT 0x4e75
                0x10100ed0                __FINI_SECTION__ = .
                0x10100ed0        0x4 LONG 0x4e560000
 *(.fini)
                0x10100ed4        0x2 SHORT 0x4e5e
                0x10100ed6        0x2 SHORT 0x4e75
                0x10100ed8                _etext = .
 *(.lit)

.data           0x10100ed8        0x8
 *(.shdata)
 *(.data)
 .data          0x10100ed8        0x0 /tmp/ccNxkieI.o
 .data          0x10100ed8        0x0 /tmp/ccY6LCTg.o
 .data          0x10100ed8        0x0 /tmp/ccv3x4ON.o
 .data          0x10100ed8        0x0 dbug.o
 .data          0x10100ed8        0x0 Hex_to_ASCII.o
 .data          0x10100ed8        0x0 null_process.o
 .data          0x10100ed8        0x0 dummy_processes.o
 .data          0x10100ed8        0x6 system.o
                0x10100ed8                g_first_run
                0x10100eda                g_free_mem
 *fill*         0x10100ede        0x2 00
 .data          0x10100ee0        0x0 main.o
                0x10100ee0                _edata = .

.bss            0x10100ee0     0x11da
                0x10100ee0                __bss_start = .
 *(.shbss)
 *(.bss)
 .bss           0x10100ee0        0x0 /tmp/ccNxkieI.o
 .bss           0x10100ee0        0x0 /tmp/ccY6LCTg.o
 .bss           0x10100ee0        0x0 /tmp/ccv3x4ON.o
 .bss           0x10100ee0        0x0 dbug.o
 .bss           0x10100ee0        0x0 Hex_to_ASCII.o
 .bss           0x10100ee0        0x0 null_process.o
 .bss           0x10100ee0        0x0 dummy_processes.o
 .bss           0x10100ee0        0x8 system.o
                0x10100ee4                g_asmBridge
                0x10100ee0                g_kernelStack
 .bss           0x10100ee8        0x0 main.o
 *(COMMON)
 *fill*         0x10100ee8        0x8 00
 COMMON         0x10100ef0     0x1010 /tmp/ccNxkieI.o
                0x10100ef0                old_stack
                0x10100f00                main_stack
 COMMON         0x10101f00      0x1ba system.o
                0x10101f00                g_queue_slots
                0x10101f30                g_proc_table
                0x10101f84                gp_mem_pool_list
                0x10102004                g_priority_queues
                0x10102036                gp_mem_pool_lookup
                0x101020b6                g_current_process
                0x101020c0                _end = ALIGN (0x8)
                0x101020c0                __end = _end

.stab
 *(.stab)

.stabstr
 *(.stabstr)

__REGISTER_RTX__
                0x10300000        0x0
                0x10300000                __REGISTER_RTX_ENTRY__ = <code 345> (.)
 *(__REGISTER_RTX__)
                0x10380000                __REGISTER_TEST_PROCS_ENTRY__ = 0x10380000
                0x10400000                __RTX_TEST_CODE_ENTRY__ = 0x10400000

__RTX_TEST_DATA__
 *(__RTX_TEST_DATA__)
OUTPUT(main.bin elf32-m68k)

.comment        0x00000000       0xea
 .comment       0x00000000       0x27 dbug.o
 .comment       0x00000027       0x27 Hex_to_ASCII.o
 .comment       0x0000004e       0x27 null_process.o
 .comment       0x00000075       0x27 dummy_processes.o
 .comment       0x0000009c       0x27 system.o
 .comment       0x000000c3       0x27 main.o
